{"version":3,"sources":["tictactoe/app.cljs"],"mappings":";AAQA,AAAKA,+BAAS,gDAAA,hDAACC;AAEf,AAAKC,sBAAM,gDAAA,mFAAA,mFAAA,GAAA,GAAA,WAAA,mFAAA,GAAA,GAAA,WAAA,mFAAA,GAAA,GAAA,paAACD;AAGZ,AAAKE,+BAAS,gDAAA,hDAACF;AACf,AAAKG,uBAAO,gDAAA,hDAACH;AAMb,8BAAA,9BAAMI,oEAAeC;AAArB,AACE,GAAI,oDAAA,pDAACC,6CAAED;AACL,AACE,mDAAA,nDAACE,sBAAOL;;AACR,mDAAA,nDAACK,sBAAOR;;AACR,kDAAA,3CAACQ,sBAAOJ;;AACV,AACE,mDAAA,nDAACI,sBAAOL;;AACR,mDAAA,nDAACK,sBAAOR;;AACR,kDAAA,3CAACQ,sBAAOJ;;;AAId,8BAAA,9BAAMK,oEACHC;AADH,AAEE,GAAI,oDAAA,pDAACH,6CAAEG;AAAP;;AAAA;;;AAMF,uBAAA,vBAAMC,sDAAQC;AAAd,AACE,IAAMC,YAAU,yBAAA,AAAAC,2CAAA,AAAAA,pEAACC,yCAAgBb,qBAAMU,sBAAOR;AAA9C,AACE,GAAI,uDAAA,AAAAU,vDAACP,6CAAEM,0BAAWT;AAChB,aAAA,NAACY;;AACD,oBAAI,AAACC,0BAAUJ;AACb,AACE,AAACL,sBAAON,oBAAMW;;AACd,mDAAA,nDAACL,sBAAOR;;AACR,OAACgB,MAAS,6CAAA,AAAAF,uCAAA,vBAAMV;;AAClB,AACE,AAACI,sBAAON,oBAAMW;;AACd,OAACL,sBAAOJ,qBAAO,4BAAA,AAAAU,5BAACL,4CAAeL;;;;AAKzC,0BAAA,1BAAMc;AAAN,AAAA,0FAAA,mDAAA,2CAAA,wDAAA,oBAAA,mFAAA,mDAAA,2CAAA,wDAAA,cAAA,mFAAA,qDAAA,2CAAA,mLAAA,3HAGmB,oGAAA,OAAA,zGAAI,6CAAA,AAAAJ,8CAAA,3FAACP,6DAAGP,wHAA+C;AAAA,AAAO,4BAAA,mFAAA,IAAA,5GAACW;2MAHlF,mFAAA,qDAAA,2CAAA,mLAAA,tiBAGmG,+CAAA,AAAAG,qCAAA,mFAAA,IAAA,3KAACK,+DAAQjB,4WACzF,oGAAA,OAAA,zGAAI,6CAAA,AAAAY,8CAAA,3FAACP,6DAAGP,wHAA+C;AAAA,AAAO,4BAAA,mFAAA,IAAA,5GAACW;2MAJlF,mFAAA,qDAAA,2CAAA,mLAAA,tiBAImG,+CAAA,AAAAG,qCAAA,mFAAA,IAAA,3KAACK,+DAAQjB,4WACzF,oGAAA,OAAA,zGAAI,6CAAA,AAAAY,8CAAA,3FAACP,6DAAGP,wHAA+C;AAAA,AAAO,4BAAA,mFAAA,IAAA,5GAACW;mNALlF,mFAAA,mDAAA,2CAAA,wDAAA,cAAA,mFAAA,qDAAA,2CAAA,mLAAA,ryBAKmG,+CAAA,AAAAG,qCAAA,mFAAA,IAAA,3KAACK,+DAAQjB,2mBAGzF,oGAAA,OAAA,zGAAI,6CAAA,AAAAY,8CAAA,3FAACP,6DAAGP,wHAA+C;AAAA,AAAO,4BAAA,mFAAA,IAAA,5GAACW;2MARlF,mFAAA,qDAAA,2CAAA,mLAAA,tiBAQmG,+CAAA,AAAAG,qCAAA,mFAAA,IAAA,3KAACK,+DAAQjB,4WACzF,oGAAA,OAAA,zGAAI,6CAAA,AAAAY,8CAAA,3FAACP,6DAAGP,wHAA+C;AAAA,AAAO,4BAAA,mFAAA,IAAA,5GAACW;2MATlF,mFAAA,qDAAA,2CAAA,mLAAA,tiBASmG,+CAAA,AAAAG,qCAAA,mFAAA,IAAA,3KAACK,+DAAQjB,4WACzF,oGAAA,OAAA,zGAAI,6CAAA,AAAAY,8CAAA,3FAACP,6DAAGP,wHAA+C;AAAA,AAAO,4BAAA,mFAAA,IAAA,5GAACW;mNAVlF,mFAAA,mDAAA,2CAAA,wDAAA,cAAA,mFAAA,qDAAA,2CAAA,mLAAA,ryBAUmG,+CAAA,AAAAG,qCAAA,mFAAA,IAAA,3KAACK,+DAAQjB,2mBAEzF,oGAAA,OAAA,zGAAI,6CAAA,AAAAY,8CAAA,3FAACP,6DAAGP,wHAA+C;AAAA,AAAO,4BAAA,mFAAA,IAAA,5GAACW;2MAZlF,mFAAA,qDAAA,2CAAA,mLAAA,tiBAYmG,+CAAA,AAAAG,qCAAA,mFAAA,IAAA,3KAACK,+DAAQjB,4WACzF,oGAAA,OAAA,zGAAI,6CAAA,AAAAY,8CAAA,3FAACP,6DAAGP,wHAA+C;AAAA,AAAO,4BAAA,mFAAA,IAAA,5GAACW;2MAblF,mFAAA,qDAAA,2CAAA,mLAAA,tiBAamG,+CAAA,AAAAG,qCAAA,mFAAA,IAAA,3KAACK,+DAAQjB,4WACzF,oGAAA,OAAA,zGAAI,6CAAA,AAAAY,8CAAA,3FAACP,6DAAGP,wHAA+C;AAAA,AAAO,4BAAA,mFAAA,IAAA,5GAACW;WAAiB,+CAAA,AAAAG,qCAAA,mFAAA,IAAA,3KAACK,+DAAQjB;;AAI5G,4BAAA,5BAAMkB;AAAN,AAAA,0FAAA,mDAEG,kBAAA,AAAAN,+CAAA,mFAAA,mDAAA,mFAAA,kDAAA,kCAAA,mFAAA,yDAAA,2CAAA,ngBAAKX,+jBAEiB;AAAA,AAAO,mCAAA,5BAACE;GAF9B,wDAAA,wBAAA,YAAA,mFAAA,yDAAA,2CAAA,4DAGsB;AAAA,AAAO,mCAAA,5BAACA;GAH9B,wDAAA,wBAAA,oBAAA,mFAAA,sDAAA,2CAAA,wDAAA,eAAA,mFAAA,kDAAA,gCAAA,mFAAA,iKAAA,hHAMQ,6CAAA,AAAAS,uCAAA,vBAAMV,sIACVc;;AAKP,qBAAA,rBAAMG;AAAN,AACA,wDAAA,jDAACC,oIAAYF,kCAAa,wBAAA,xBAACG","names":["tictactoe.app/playing?","reagent.core.atom","tictactoe.app/board","tictactoe.app/options?","tictactoe.app/player","tictactoe.app/handleOptions","option","cljs.core._EQ_","cljs.core/reset!","tictactoe.app/change-player","player","tictactoe.app/playFn","index","new-board","cljs.core/deref","tictactoe.game/play-move","js/alert","tictactoe.game/win?","tictactoe.app/GameBoard","cljs.core.get_in","tictactoe.app/Application","tictactoe.app/init","reagent.dom.render","js/document.getElementById"],"sourcesContent":["(ns tictactoe.app\r\n  (:require [reagent.core :as r]\r\n            [reagent.dom :as dom]\r\n            [tictactoe.game :as game]\r\n             ))\r\n\r\n\r\n;states \r\n(def playing? (r/atom false))\r\n\r\n(def board (r/atom [[\"\" \"\" \"\"]\r\n                    [\"\" \"\" \"\"]\r\n                    [\"\" \"\" \"\"]]))\r\n(def options? (r/atom true))\r\n(def player (r/atom nil))\r\n\r\n\r\n\r\n;functions\r\n\r\n(defn handleOptions [option]\r\n  (if (= option \"O\")\r\n    (do\r\n      (reset! options? false)\r\n      (reset! playing? true)\r\n      (reset! player \"O\"))\r\n    (do\r\n      (reset! options? false)\r\n      (reset! playing? true)\r\n      (reset! player \"X\")\r\n      )))\r\n\r\n\r\n(defn change-player\r\n  [player]\r\n  (if (= player \"X\")\r\n    \"O\"\r\n    \"X\"))\r\n\r\n\r\n\r\n(defn playFn [index]\r\n  (let [new-board (game/play-move @board index @player)]\r\n    (if (= new-board @player)\r\n      (js/alert \"Already a piece in this position\")\r\n      (if (game/win? new-board)\r\n        (do\r\n          (reset! board new-board)\r\n          (reset! playing? false)\r\n          (js/alert (str @player \" Won!\")))\r\n        (do\r\n          (reset! board new-board)\r\n          (reset! player (change-player @player))))))\r\n  )\r\n\r\n; Components \r\n\r\n(defn GameBoard [] \r\n  [:div {:class \"container\"}\r\n   [:div {:class \"col\"}\r\n    [:span {:class (if (= @playing? true) \"cell\" \"disabledCell\") :onClick (fn [] (playFn [0 0])) } (get-in @board [0 0])] \r\n    [:span {:class (if (= @playing? true) \"cell\" \"disabledCell\") :onClick (fn [] (playFn [0 1])) } (get-in @board [0 1])]\r\n    [:span {:class (if (= @playing? true) \"cell\" \"disabledCell\") :onClick (fn [] (playFn [0 2])) } (get-in @board [0 2])]\r\n    ]\r\n   [:div {:class \"col\"}\r\n    [:span {:class (if (= @playing? true) \"cell\" \"disabledCell\") :onClick (fn [] (playFn [1 0])) } (get-in @board [1 0])]\r\n    [:span {:class (if (= @playing? true) \"cell\" \"disabledCell\") :onClick (fn [] (playFn [1 1])) } (get-in @board [1 1])]\r\n    [:span {:class (if (= @playing? true) \"cell\" \"disabledCell\") :onClick (fn [] (playFn [1 2])) } (get-in @board [1 2])]]\r\n   [:div {:class \"col\"}\r\n    [:span {:class (if (= @playing? true) \"cell\" \"disabledCell\") :onClick (fn [] (playFn [2 0])) } (get-in @board [2 0])]\r\n    [:span {:class (if (= @playing? true) \"cell\" \"disabledCell\") :onClick (fn [] (playFn [2 1])) } (get-in @board [2 1])]\r\n    [:span {:class (if (= @playing? true) \"cell\" \"disabledCell\") :onClick (fn [] (playFn [2 2])) } (get-in @board [2 2])]]\r\n   ]\r\n  )\r\n\r\n(defn Application []\r\n  [:div\r\n   (if @options?\r\n     [:div [:h1 \"What player goes first?\"]\r\n      [:button {:onClick (fn [] (handleOptions \"O\")) :class \"select-button\"} \"O\"]\r\n      [:button {:onClick (fn [] (handleOptions \"X\")) :class \"select-button\"} \"X\"]]\r\n     [:main {:class \"main\"}\r\n      [:h1 \"Refresh page to reset\"]\r\n      [:h2 (str @player \"'s turn\")]\r\n      [GameBoard]\r\n      ]\r\n     )])\r\n\r\n\r\n(defn init []\r\n(dom/render [Application] (js/document.getElementById \"app\"))\r\n )"]}